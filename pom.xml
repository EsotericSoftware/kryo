<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<groupId>com.esotericsoftware</groupId>
	<artifactId>kryo-parent</artifactId>
	<version>4.0.3-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Kryo Parent</name>
	<description>Fast, efficient Java serialization. This is the parent pom that assembles the main kryo and shaded kryo artifacts.</description>
	<url>https://github.com/EsotericSoftware/kryo</url>

	<licenses>
		<license>
			<name>3-Clause BSD License</name>
			<url>https://opensource.org/licenses/BSD-3-Clause</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/EsotericSoftware/kryo</url>
		<connection>scm:git:git@github.com:EsotericSoftware/kryo.git</connection>
		<developerConnection>scm:git:git@github.com:EsotericSoftware/kryo.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<id>nathan.sweet</id>
			<name>Nathan Sweet</name>
			<email>nathan.sweet@gmail.com</email>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<versions.reflectasm>1.11.3</versions.reflectasm>
		<test.exclude>**/Java8*Test.java</test.exclude>
	</properties>
	
	<modules>
		<module>pom-main.xml</module>
		<module>pom-shaded.xml</module>
	</modules>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.esotericsoftware</groupId>
				<artifactId>reflectasm</artifactId>
				<version>${versions.reflectasm}</version>
			</dependency>
			<dependency>
				<groupId>com.esotericsoftware</groupId>
				<artifactId>reflectasm</artifactId>
				<classifier>shaded</classifier>
				<version>${versions.reflectasm}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>minlog</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>2.5.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- Set nonstandard source and test source dirs -->
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<inherited>true</inherited>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
						<encoding>utf-8</encoding>
						<testExcludes>
							<testExclude>${test.exclude}</testExclude>
						</testExcludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Disable resources (project has none) -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<excludes>
						<exclude>**/.svn/*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<!-- required for java8, so that javadoc errors don't fail the build -->
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.3</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>requireSnapshot</id>
			<!-- This profile is activated by the "-P requireSnapshot" switch to
				be able to deploy SNAPSHOTs only (which is not allowed for releases) -->
			<build>
				<plugins>
					<!-- Jenkins should only build -SNAPSHOTs -->
					<plugin>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<evaluateBeanshell>
											<condition>"${project.version}".endsWith("-SNAPSHOT")</condition>
											<message>Jenkins should only build -SNAPSHOT versions</message>
										</evaluateBeanshell>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>until-java8</id>
			<activation>
				<!-- Use exclusive 1.8 range instead of inclusive 1.7, because an upper bound ",1.7]" is likely not to include most releases of 1.7,
				   since they will have an additional "patch" release such as _05 that is not taken into consideration in the above range.
				   See also http://maven.apache.org/guides/introduction/introduction-to-profiles.html#Details_on_profile_activation -->
				<jdk>[1.5,1.8)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.19</version>
						<configuration>
							<excludes>
								<exclude>**/Java8*Test.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java8</id>
			<!-- To disable this profile run mvn with '-P !java8' (maybe escape the exclamation mark) -->
			<activation><jdk>[1.8,)</jdk></activation>
			<!-- use properties to change compiler configuration because overriding build/plugin config just did not work -->
			<properties>
				<!-- Setting an empty values does not override/set the property -->
				<test.exclude>someValueWhichDoesNotExist</test.exclude>
				<maven.compiler.testSource>1.8</maven.compiler.testSource>
				<maven.compiler.testTarget>1.8</maven.compiler.testTarget>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>sonatype-releases</id>
			<name>sonatype releases repo</name>
			<url>https://oss.sonatype.org/content/repositories/releases</url>
		</repository>
	</repositories>
</project>
